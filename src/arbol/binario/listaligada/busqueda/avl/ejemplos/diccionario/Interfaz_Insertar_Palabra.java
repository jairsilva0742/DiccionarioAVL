/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arbol.binario.listaligada.busqueda.avl.ejemplos.diccionario;

import arbol.binario.listaligada.busqueda.avl.ArbolAVL;
import arbol.binario.listaligada.busqueda.avl.NodoAVL;
import arbol.binario.listaligada.busqueda.avl.NodoBinarioGenerico;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Leonardo
 */
public class Interfaz_Insertar_Palabra extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz_Insertar_Palabra
     */
    
    private Diccionario diccionario;
    private Palabra dato;
    public Interfaz_Insertar_Palabra(Diccionario diccionario) {
        this.diccionario=diccionario;
        initComponents();
        textFieldResultado.setEditable(false);
        buttonIngresarSignificado.setEnabled(false);
        buttonIngresarAntonimo.setEnabled(false);
        buttonIngresarSinonimo.setEnabled(false);
        
    }
    public Interfaz_Insertar_Palabra() {
        
        initComponents();
         textFieldResultado.setEditable(false);
        buttonIngresarSignificado.setEnabled(false);
        buttonIngresarAntonimo.setEnabled(false);
        buttonIngresarSinonimo.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textFieldResultado = new java.awt.TextField();
        buttonIngresarSignificado = new java.awt.Button();
        textFieldPalabraNueva = new java.awt.TextField();
        buttonPalabraNueva = new java.awt.Button();
        buttonIngresarSinonimo = new java.awt.Button();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        buttonSignificado = new java.awt.Button();
        buttonIngresarAntonimo = new java.awt.Button();
        buttonBuscarAntonimos = new java.awt.Button();
        buttonBuscarSinonimos = new java.awt.Button();
        textFieldModificarPalabra = new java.awt.TextField();
        label3 = new java.awt.Label();
        buttonModificar = new java.awt.Button();
        textFieldIngreso = new java.awt.TextField();
        jLabel1 = new javax.swing.JLabel();
        buttonExportar = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textFieldResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldResultadoActionPerformed(evt);
            }
        });

        buttonIngresarSignificado.setLabel("Ingresar Significado");
        buttonIngresarSignificado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIngresarSignificadoActionPerformed(evt);
            }
        });

        buttonPalabraNueva.setLabel("Ingresar palabra");
        buttonPalabraNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPalabraNuevaActionPerformed(evt);
            }
        });

        buttonIngresarSinonimo.setLabel("Ingresar sinonimo");
        buttonIngresarSinonimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIngresarSinonimoActionPerformed(evt);
            }
        });

        label1.setText("Entrada Datos");

        label2.setText("Resultado");

        buttonSignificado.setLabel("Buscar Significado");
        buttonSignificado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSignificadoActionPerformed(evt);
            }
        });

        buttonIngresarAntonimo.setLabel("Ingresar Antonimo");
        buttonIngresarAntonimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIngresarAntonimoActionPerformed(evt);
            }
        });

        buttonBuscarAntonimos.setLabel("Buscar Antonimos");
        buttonBuscarAntonimos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarAntonimosActionPerformed(evt);
            }
        });

        buttonBuscarSinonimos.setLabel("Buscar Sinonimos");
        buttonBuscarSinonimos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarSinonimosActionPerformed(evt);
            }
        });

        textFieldModificarPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldModificarPalabraActionPerformed(evt);
            }
        });

        label3.setText("Palabra a Eliminar");

        buttonModificar.setLabel("Eliminar");
        buttonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModificarActionPerformed(evt);
            }
        });

        jLabel1.setText("Significado/Antonimo/Sinonimo a Ingresar");

        buttonExportar.setLabel("Exportar");
        buttonExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonIngresarSignificado, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonIngresarSinonimo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonIngresarAntonimo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonExportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldPalabraNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(textFieldModificarPalabra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonBuscarAntonimos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                .addComponent(buttonPalabraNueva, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonSignificado, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(buttonBuscarSinonimos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(textFieldIngreso, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                        .addComponent(textFieldResultado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textFieldPalabraNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonPalabraNueva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonSignificado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonBuscarAntonimos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonBuscarSinonimos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(textFieldModificarPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonIngresarSinonimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonIngresarAntonimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonIngresarSignificado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonExportar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        buttonIngresarSignificado.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPalabraNuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPalabraNuevaActionPerformed
        // TODO add your handling code here:
        String resultado;
        resultado=diccionario.buscar1(textFieldPalabraNueva.getText());
        buttonIngresarSignificado.setEnabled(true);
                buttonIngresarAntonimo.setEnabled(true);
                buttonIngresarSinonimo.setEnabled(true);
        if(resultado.equals(" Urra!!! Palabra encontrada "+textFieldPalabraNueva.getText())){
            resultado="La palabra ya estaba almacenada";            
        }else{
            dato=new Palabra(textFieldPalabraNueva.getText());
            try {
                diccionario.insertar(dato);
                resultado=diccionario.buscar1(textFieldPalabraNueva.getText());
                //este codigo se usa solo para tener el Nodo actual, ya que este es el nuevo
                resultado="se insertó la palabra";
                
               
                
            } catch (Exception ex) {
                Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        textFieldResultado.setText(resultado);
    }//GEN-LAST:event_buttonPalabraNuevaActionPerformed

    private void buttonIngresarSinonimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIngresarSinonimoActionPerformed
        // TODO add your handling code here:
        String resultado2="";
        Palabra datoOriginal;
        Diccionario ArbolPrincipal;
        String resultado=diccionario.buscar1(textFieldPalabraNueva.getText());
        ArbolPrincipal=diccionario;
        datoOriginal=diccionario.getNodoBusqueda().getDato();
        
        
        //Ingresar en el arbol interno de sinonimos
        Palabra dato=new Palabra(textFieldIngreso.getText());
        diccionario.getNodoBusqueda().getDato().getsinonimos().insertarDato(dato);
        datoOriginal=dato;
        //resultado=diccionario.buscar1(textFieldIngreso.getText());
        textFieldResultado.setText("El sinonimo ingresado es: "+diccionario.getNodoBusqueda().getDato().getsinonimos().getRoot().getDato().getPalabra());
        

//El siguiente código es para poder ingresar sinonimo si aún no está en el arból principal
       
        resultado=ArbolPrincipal.buscar1(textFieldIngreso.getText());
        
        if(resultado.equals(" Urra!!! Palabra encontrada "+diccionario.getNodoBusqueda().getDato().getPalabra())){
            
            resultado2="El sinonimo ya estaba almacenado en el arbol"; 
            NodoAVL x=diccionario.buscar(textFieldIngreso.getText());
            if(x.getDato().getsinonimos().buscar(textFieldPalabraNueva.getText())==null){
                    dato=new Palabra(textFieldPalabraNueva.getText());
                x.getDato().getsinonimos().insertarDato(dato);
                
            }
                
        }else{
            dato=new Palabra(textFieldIngreso.getText());
            try {
                diccionario.insertar(dato);
                NodoAVL x=diccionario.buscar(textFieldIngreso.getText());
                if(x.getDato().getsinonimos().buscar(textFieldPalabraNueva.getText())==null){
                    dato=new Palabra(textFieldPalabraNueva.getText());
                x.getDato().getsinonimos().insertarDato(dato);
                
                }
                
                diccionario.getNodoBusqueda().getDato().getsinonimos().insertarDato(datoOriginal);
                resultado=diccionario.buscar1(textFieldIngreso.getText());
                //este codigo se usa solo para tener el Nodo actual, ya que este es el nuevo
                resultado2="se insertó la palabra";
                
               
                
            } catch (Exception ex) {
                Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }textFieldResultado.setText(resultado2);
        
    }//GEN-LAST:event_buttonIngresarSinonimoActionPerformed

    private void textFieldModificarPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldModificarPalabraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldModificarPalabraActionPerformed

    private void buttonSignificadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSignificadoActionPerformed
        // TODO add your handling code here:
        String resultado;
        resultado=diccionario.buscar1(textFieldPalabraNueva.getText());
        //este codigo se usa solo para tener el Nodo actual, ya que este es el nuevo
        if(diccionario.getNodoBusqueda().getDato().getSignificado().equalsIgnoreCase("")){
        textFieldResultado.setText("aún no se ha ingrasado significado");
        }else{
            textFieldResultado.setText("El Significado de "+textFieldPalabraNueva.getText()+" es: "+diccionario.getNodoBusqueda().getDato().getSignificado());
              
                }
    }//GEN-LAST:event_buttonSignificadoActionPerformed

    private void buttonBuscarAntonimosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarAntonimosActionPerformed
        // TODO add your handling code here:
        String resultado=diccionario.buscar1(textFieldPalabraNueva.getText());
        ArbolAVL Antonimos=diccionario.getNodoBusqueda().getDato().getAntonimos();
        if(Antonimos.getRoot()!=null){
            textFieldResultado.setText("Los Antonimos son: "+inordenNR(Antonimos.getRoot()));
            
        }else{
            textFieldResultado.setText("No hay antonimos registrados");
        }
    }//GEN-LAST:event_buttonBuscarAntonimosActionPerformed

    private void buttonBuscarSinonimosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarSinonimosActionPerformed
        // TODO add your handling code here:
        String resultado=diccionario.buscar1(textFieldPalabraNueva.getText());
        ArbolAVL Sinonimos=diccionario.getNodoBusqueda().getDato().getsinonimos();
        if(Sinonimos.getRoot()!=null){
            textFieldResultado.setText("Los Sinonimos son: "+inordenNR(Sinonimos.getRoot()));
            
        }else{
            textFieldResultado.setText("No hay Sinonimos registrados");
        }
    }//GEN-LAST:event_buttonBuscarSinonimosActionPerformed

    private void textFieldResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldResultadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldResultadoActionPerformed

    private void buttonIngresarSignificadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIngresarSignificadoActionPerformed
        // TODO add your handling code here:
        String resultado=diccionario.buscar1(textFieldPalabraNueva.getText());
        diccionario.getNodoBusqueda().getDato().setSignificado(textFieldIngreso.getText());
        textFieldResultado.setText("El Significado de "+textFieldPalabraNueva.getText()+" que acaba de ingresar es: "+diccionario.getNodoBusqueda().getDato().getSignificado());
        
    }//GEN-LAST:event_buttonIngresarSignificadoActionPerformed

    private void buttonIngresarAntonimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIngresarAntonimoActionPerformed
        // TODO add your handling code here:
        String resultado2="";
        Palabra dato;
        Palabra datoOriginal;
        Diccionario ArbolPrincipal;
        String resultado=diccionario.buscar1(textFieldPalabraNueva.getText());
        ArbolPrincipal=diccionario;
        
       // ArbolAVL NuevoAntonimo;
        dato=new Palabra(textFieldIngreso.getText());
        diccionario.getNodoBusqueda().getDato().getAntonimos().insertarDato(dato);
        datoOriginal=dato;
       
        textFieldResultado.setText("El Antonimo ingresado es: "+diccionario.getNodoBusqueda().getDato().getAntonimos().getRoot().getDato().getPalabra());
        

//El siguiente código es para poder ingresar antonimo si aún no está en el arból principal
  resultado=ArbolPrincipal.buscar1(textFieldIngreso.getText());
  
        if(resultado.equals(" Urra!!! Palabra encontrada "+diccionario.getNodoBusqueda().getDato().getPalabra())){
            resultado2="El antonimo ya estaba almacenado en el arbol";
            NodoAVL x=diccionario.buscar(textFieldIngreso.getText());
if(x.getDato().getAntonimos().buscar(textFieldPalabraNueva.getText())==null){
                    dato=new Palabra(textFieldPalabraNueva.getText());
                x.getDato().getAntonimos().insertarDato(dato);}            
        }else{
            dato=new Palabra(textFieldIngreso.getText());
            try {
                diccionario.insertar(dato);
                NodoAVL x=diccionario.buscar(textFieldIngreso.getText());
                if(x.getDato().getAntonimos().buscar(textFieldPalabraNueva.getText())==null){
                    dato=new Palabra(textFieldPalabraNueva.getText());
                x.getDato().getAntonimos().insertarDato(dato);}
                diccionario.getNodoBusqueda().getDato().getAntonimos().insertarDato(datoOriginal);
                resultado=diccionario.buscar1(textFieldIngreso.getText());
                //este codigo se usa solo para tener el Nodo actual, ya que este es el nuevo
                resultado2="se insertó la palabra";
                
               
                
            } catch (Exception ex) {
                Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }textFieldResultado.setText(resultado2);
        
       
    }//GEN-LAST:event_buttonIngresarAntonimoActionPerformed

    private void buttonExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportarActionPerformed
        // TODO add your handling code here:
        FileWriter writer=null;  
        try {
            writer = new FileWriter("C:\\Users\\PERSONAL\\Documents\\NetBeansProjects\\Segunda_Practica\\diccionario2.txt");
        } catch (IOException ex) {
            Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(Level.SEVERE, null, ex);
        }
    BufferedWriter buffer = new BufferedWriter(writer);  
       
            NodoAVL recorrido;
            recorrido=diccionario.getRoot();
        
        try {
            inordenNRwriter(recorrido,buffer);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(Level.SEVERE, null, ex);
        }try {
            writer.close();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
                
            
            
       
        try {  
            buffer.close();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExportarActionPerformed

    private void buttonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModificarActionPerformed
        // TODO add your handling code here:
        ArbolAVL eliminacion=diccionario;
        Palabra x=new Palabra(textFieldModificarPalabra.getText());
        eliminacion.elimina(x);
    }//GEN-LAST:event_buttonModificarActionPerformed

     /*public static String inorden(NodoBinarioGenerico r) {
         int i=1;
         StringBuilder todos=new StringBuilder();
        if (r != null) {
            inorden(r.getLi());
            
            todos=todos.append(r.getDato().getPalabra()+"  ");
            i++;
            inorden(r.getLd());
        }
        return todos.toString();
    }*/
     public static String inordenNR(NodoBinarioGenerico r) {
        Stack<NodoBinarioGenerico> migas = new Stack<>();
        StringBuilder todos=new StringBuilder();
        migas.add(r);
        r = r.getLi();
        
        while (!migas.isEmpty() || r != null) {
            
            if (r != null) {
                migas.add(r);
                r = r.getLi();
            } else {
                r = migas.pop();
                todos.append(r.getDato().getPalabra()+" // ");
                r = r.getLd();
            }
        }return todos.toString();
    }
     public static void inordenNRwriter(NodoBinarioGenerico r,BufferedWriter buffer) throws IOException {
        Stack<NodoBinarioGenerico> migas = new Stack<>();
        migas.add(r);
        r = r.getLi();
        
        while (!migas.isEmpty() || r != null) {
            
            if (r != null) {
                migas.add(r);
                r = r.getLi();
            } else {
                r = migas.pop();
              
                   buffer.write(r.getDato().getPalabra()+"/"+r.getDato().getSignificado()+": ");
                   try{
                       if (r.getDato().getAntonimos().getRoot()!=null){
               inordenNRArbolitos(r.getDato().getAntonimos().getRoot(),buffer);
               buffer.write(" : ");}
                       else{buffer.write(" : ");}
                       if(r.getDato().getsinonimos().getRoot()!=null){
               inordenNRArbolitos(r.getDato().getsinonimos().getRoot(),buffer);}}
                   catch(Exception e){}
                buffer.newLine();
                r = r.getLd();
            }
        }buffer.flush();
    }
     public static void inordenNRArbolitos(NodoBinarioGenerico r,BufferedWriter buffer) throws IOException {
        Stack<NodoBinarioGenerico> migas = new Stack<>();
        migas.add(r);
        r = r.getLi();
        
        while (!migas.isEmpty() || r != null) {
            
            if (r != null) {
                migas.add(r);
                r = r.getLi();
            } else {
                r = migas.pop();
              
                   buffer.write(r.getDato().getPalabra());
               
                
                r = r.getLd();
                buffer.write(", ");
            }
        }buffer.flush();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Insertar_Palabra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz_Insertar_Palabra().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button buttonBuscarAntonimos;
    private java.awt.Button buttonBuscarSinonimos;
    private java.awt.Button buttonExportar;
    private java.awt.Button buttonIngresarAntonimo;
    private java.awt.Button buttonIngresarSignificado;
    private java.awt.Button buttonIngresarSinonimo;
    private java.awt.Button buttonModificar;
    private java.awt.Button buttonPalabraNueva;
    private java.awt.Button buttonSignificado;
    private javax.swing.JLabel jLabel1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.TextField textFieldIngreso;
    private java.awt.TextField textFieldModificarPalabra;
    private java.awt.TextField textFieldPalabraNueva;
    private java.awt.TextField textFieldResultado;
    // End of variables declaration//GEN-END:variables
}
